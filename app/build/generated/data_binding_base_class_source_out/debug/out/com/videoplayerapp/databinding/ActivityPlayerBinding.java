// Generated by view binder compiler. Do not edit!
package com.videoplayerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.media3.ui.PlayerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.videoplayerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPlayerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnCloseSubtitlePanel;

  @NonNull
  public final Button btnSubtitlePanel;

  @NonNull
  public final LinearLayout controlsOverlay;

  @NonNull
  public final ProgressBar loadingIndicator;

  @NonNull
  public final PlayerView playerView;

  @NonNull
  public final LinearLayout subtitlePanel;

  @NonNull
  public final RecyclerView subtitleRecyclerView;

  @NonNull
  public final TextView subtitleView;

  private ActivityPlayerBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnCloseSubtitlePanel, @NonNull Button btnSubtitlePanel,
      @NonNull LinearLayout controlsOverlay, @NonNull ProgressBar loadingIndicator,
      @NonNull PlayerView playerView, @NonNull LinearLayout subtitlePanel,
      @NonNull RecyclerView subtitleRecyclerView, @NonNull TextView subtitleView) {
    this.rootView = rootView;
    this.btnCloseSubtitlePanel = btnCloseSubtitlePanel;
    this.btnSubtitlePanel = btnSubtitlePanel;
    this.controlsOverlay = controlsOverlay;
    this.loadingIndicator = loadingIndicator;
    this.playerView = playerView;
    this.subtitlePanel = subtitlePanel;
    this.subtitleRecyclerView = subtitleRecyclerView;
    this.subtitleView = subtitleView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCloseSubtitlePanel;
      ImageButton btnCloseSubtitlePanel = ViewBindings.findChildViewById(rootView, id);
      if (btnCloseSubtitlePanel == null) {
        break missingId;
      }

      id = R.id.btnSubtitlePanel;
      Button btnSubtitlePanel = ViewBindings.findChildViewById(rootView, id);
      if (btnSubtitlePanel == null) {
        break missingId;
      }

      id = R.id.controlsOverlay;
      LinearLayout controlsOverlay = ViewBindings.findChildViewById(rootView, id);
      if (controlsOverlay == null) {
        break missingId;
      }

      id = R.id.loadingIndicator;
      ProgressBar loadingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (loadingIndicator == null) {
        break missingId;
      }

      id = R.id.playerView;
      PlayerView playerView = ViewBindings.findChildViewById(rootView, id);
      if (playerView == null) {
        break missingId;
      }

      id = R.id.subtitlePanel;
      LinearLayout subtitlePanel = ViewBindings.findChildViewById(rootView, id);
      if (subtitlePanel == null) {
        break missingId;
      }

      id = R.id.subtitleRecyclerView;
      RecyclerView subtitleRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (subtitleRecyclerView == null) {
        break missingId;
      }

      id = R.id.subtitleView;
      TextView subtitleView = ViewBindings.findChildViewById(rootView, id);
      if (subtitleView == null) {
        break missingId;
      }

      return new ActivityPlayerBinding((RelativeLayout) rootView, btnCloseSubtitlePanel,
          btnSubtitlePanel, controlsOverlay, loadingIndicator, playerView, subtitlePanel,
          subtitleRecyclerView, subtitleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
